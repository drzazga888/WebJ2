{
	"variables": [],
	"info": {
		"name": "webj2",
		"_postman_id": "c95ac7f3-10ac-22ca-6553-42f2bce83f74",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "audio",
			"description": "",
			"item": [
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User created message\"] = jsonData.message === \"user was successfully created\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create second user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User created message\"] = jsonData.message === \"user was successfully created\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan2\",\n  \"lname\": \"Kowalski2\",\n  \"email\": \"jan@kowalski2.pl\",\n  \"password\": \"Ja-8-fajnie2\",\n  \"password2\": \"Ja-8-fajnie2\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "name not provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name must be provided message\"] = jsonData.error = \"name must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "name too long",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name is too long message\"] = jsonData.error = \"max length of name is 40\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"VERY_LONG!VERY_LONG!VERY_LONG!VERY_LONG!!\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create audio resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Id is provided\"] = jsonData.id;",
									"tests[\"Audio created message\"] = jsonData.message === \"audio was successfully created\";",
									"",
									"postman.setGlobalVariable(\"audio_resource_id\", jsonData.id);"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							},
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Audio name 1\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put to not existing resource",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Not found message\"] = jsonData.error === \"resource cannot be found\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/999",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"value": "this is bad text",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put by different user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Not found message\"] = jsonData.error === \"you can access only your private resources\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"value": "texttext",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put with empty body",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put with empty audio field",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Audio field is empty\"] = jsonData.error === \"you need to send your audio in the 'audio' field as multipart-form-data\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"value": "",
									"description": "",
									"type": "file"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put with invalid type",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Audio format not supported message\"] = jsonData.error === \"provided audio format is not supported\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"value": "this is bad text",
									"description": "",
									"type": "text"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "put audio",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Audio replaced message\"] = jsonData.message === \"audio file was successfully replaced\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "multipart/form-data",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"description": "",
									"type": "file",
									"src": "111127__stephensaldanha__scifi-transforming-sound-01.wav"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get audios",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Result is array\"] = jsonData instanceof Array;",
									"tests[\"All entries contains id\"] = !jsonData.some(obj => !obj.id);",
									"tests[\"All entries contains name\"] = !jsonData.some(obj => !obj.name);",
									"tests[\"AmplitudeOverTime is valid (if provided)\"] = !jsonData.some(obj => !(!obj.amplitudeOverTime || obj.amplitudeOverTime instanceof Array));",
									"tests[\"All entries does dot contain user\"] = !jsonData.some(obj => obj.user);"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - not provided",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name must be provided message\"] = jsonData.error === \"name must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - name is null",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name must be provided message\"] = jsonData.error === \"name must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": null\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - name is empty string",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Name must be provided message\"] = jsonData.error === \"name must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - name too long",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Max. length error\"] = jsonData.error === \"max length of name is 40\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"testtesttesttesttesttesttesttesttesttest1\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - different user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 403\"] = responseCode.code === 403;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Permission denied message\"] = jsonData.error === \"you can access only your private resources\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Renamed audio\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - resource not exists",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 404\"] = responseCode.code === 404;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Permission denied message\"] = jsonData.error === \"resource cannot be found\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/999",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Renamed audio\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "change name - ok",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Audio changed message\"] = jsonData.message === \"audio information was successfully updated\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"name\": \"Audio 1 with changed name\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "get audios again",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Result is array\"] = jsonData instanceof Array;",
									"tests[\"All entries contains id\"] = !jsonData.some(obj => !obj.id);",
									"tests[\"All entries contains name\"] = !jsonData.some(obj => !obj.name);",
									"tests[\"AmplitudeOverTime is valid (if provided)\"] = !jsonData.some(obj => !(!obj.amplitudeOverTime || obj.amplitudeOverTime instanceof Array));",
									"tests[\"All entries does dot contain user\"] = !jsonData.some(obj => obj.user);",
									"",
									"var extracted = jsonData.filter(obj => obj.id === Number(globals[\"audio_resource_id\"]));",
									"tests[\"Previously managed audio is here\"] = extracted.length === 1;",
									"tests[\"Name is correct\"] = extracted.length && extracted[0].name === \"Audio 1 with changed name\";",
									"tests[\"Amplitude is provided\"] = extracted.length && extracted[0].amplitudeOverTime instanceof Array;",
									"tests[\"Amplitude has entries\"] = extracted.length && extracted[0].amplitudeOverTime instanceof Array && extracted[0].amplitudeOverTime.length;"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete audio",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User deleted message\"] = jsonData.message === \"audio was successfully deleted\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios/{{audio_resource_id}}",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {},
						"description": ""
					},
					"response": []
				},
				{
					"name": "check if audio is deleted",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Result is array\"] = jsonData instanceof Array;",
									"tests[\"All entries contains id\"] = !jsonData.some(obj => !obj.id);",
									"tests[\"All entries contains name\"] = !jsonData.some(obj => !obj.name);",
									"tests[\"AmplitudeOverTime is valid (if provided)\"] = !jsonData.some(obj => !(!obj.amplitudeOverTime || obj.amplitudeOverTime instanceof Array));",
									"tests[\"All entries does dot contain user\"] = !jsonData.some(obj => obj.user);",
									"",
									"var extracted = jsonData.filter(obj => obj.id === Number(globals[\"audio_resource_id\"]));",
									"tests[\"Audio does not exists\"] = extracted.length === 0;"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/audios",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "audio",
									"value": "",
									"description": "",
									"type": "file"
								}
							]
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete first user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User deleted message\"] = jsonData.message === \"user was successfully deleted\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete second user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User deleted message\"] = jsonData.message === \"user was successfully deleted\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"description": "",
			"item": [
				{
					"name": "no credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Error message is bad login or password\"] = jsonData.error = \"Bad login or password\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bad credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 401\"] = responseCode.code === 401;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Error message is bad login or password\"] = jsonData.error = \"Bad login or password\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "empty fname",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Fname not provided message is in error field\"] = jsonData.error === \"fname must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "too long fname",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Too long fname message is in error field\"] = jsonData.error === \"max length of fname is 40\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"asqoldksjuasqoldksjuasqoldksjuasqoldksjua\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "empty lname",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Lname not provided message is in error field\"] = jsonData.error === \"lname must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "too long lname",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Too long lname message is in error field\"] = jsonData.error === \"max length of lname is 40\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"asqoldksjuasqoldksjuasqoldksjuasqoldksjua\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "empty email",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Empty email message is in error field\"] = jsonData.error === \"email must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bad email format",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bad email format message is in error field\"] = jsonData.error === \"bad email format\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"yfyugvdfgdg\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "empty password",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Empty password message is in error field\"] = jsonData.error === \"password must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "bad password format",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Bad password message is in error field\"] = jsonData.error === \"password must contain at liest 1 uppercase English letter, 1 lowercase English letter, 1 digit and 1 special character (#?!@$%^&*-)\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"week password\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "empty password2",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Empty password2 message is in error field\"] = jsonData.error === \"password2 must be provided\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "passwords not equal",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 400\"] = responseCode.code === 400;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Empty password2 message is in error field\"] = jsonData.error === \"password and password2 must be the same\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie-2\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 201\"] = responseCode.code === 201;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User created message\"] = jsonData.message === \"user was successfully created\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "check user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Fname field is valid\"] = jsonData.fname = \"Jan\";",
									"tests[\"Lname field is valid\"] = jsonData.lname = \"Kowalski\";",
									"tests[\"Email field is valid\"] = jsonData.fname = \"jan@kowalski.pl\";",
									"tests[\"Id field is provided\"] = jsonData.id;",
									"tests[\"Password is not showed\"] = !jsonData.password;",
									"tests[\"Password2 is not showed\"] = !jsonData.password2;",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "create the same user again",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 409\"] = responseCode.code === 409;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User exists message is in error field\"] = jsonData.error === \"user already exists\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users",
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "update user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User updated message\"] = jsonData.message === \"user was successfully updated\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpLnBsOkphLTgtZmFqbmll",
								"description": ""
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan2\",\n  \"lname\": \"Kowalski2\",\n  \"email\": \"jan@kowalski2.pl\",\n  \"password\": \"Ja-8-fajnie2\",\n  \"password2\": \"Ja-8-fajnie2\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "check updated user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"Fname field is valid\"] = jsonData.fname = \"Jan2\";",
									"tests[\"Lname field is valid\"] = jsonData.lname = \"Kowalski2\";",
									"tests[\"Email field is valid\"] = jsonData.fname = \"jan@kowalski2.pl\";",
									"tests[\"Id field is provided\"] = jsonData.id;",
									"tests[\"Password is not showed\"] = !jsonData.password;",
									"tests[\"Password2 is not showed\"] = !jsonData.password2;",
									""
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"fname\": \"Jan\",\n  \"lname\": \"Kowalski\",\n  \"email\": \"jan@kowalski.pl\",\n  \"password\": \"Ja-8-fajnie\",\n  \"password2\": \"Ja-8-fajnie\"\n}"
						},
						"description": ""
					},
					"response": []
				},
				{
					"name": "delete user",
					"event": [
						{
							"listen": "test",
							"script": {
								"type": "text/javascript",
								"exec": [
									"tests[\"Status code is 200\"] = responseCode.code === 200;",
									"",
									"var jsonData = JSON.parse(responseBody);",
									"tests[\"User deleted message\"] = jsonData.message === \"user was successfully deleted\";"
								]
							}
						}
					],
					"request": {
						"url": "https://localhost:9443/webj2/api/users/me",
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "Basic amFuQGtvd2Fsc2tpMi5wbDpKYS04LWZham5pZTI=",
								"description": ""
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"description": ""
					},
					"response": []
				}
			]
		}
	]
}